version: "3"

services:
  redis:
    image: "redis:alpine"
    expose:
      - 6379
  pg:
    image: "postgres:alpine"
    expose:
      - 5432
    #volumes:
    #- /tmp/pg:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 20s
      retries: 5
  minio:
    image: "minio/minio"
    ports:
      - "9000:9000"
    #volumes:
    #- /tmp/minio/data:/export
    #- /tmp/minio/config:/root/.minio
    environment:
      - "MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE"
      - "MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    expose:
      - 9000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 20s
      retries: 5
    command: server /export
  mc:
    image: "minio/mc"
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
      /usr/bin/mc rm -r --force myminio/bucket;
      /usr/bin/mc mb myminio/bucket;
      /usr/bin/mc policy set public myminio/bucket;
      exit 0;
      "
  server:
    build: .
    ports:
      - "8080:8080"
    expose:
      - 8080
    command: server
    depends_on:
      - pg
      - redis
      - minio
      - mc
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgres://postgres:postgres@pg:5432/postgres
      - BUCKET=bucket
      - S3_ENDPOINT=http://localhost:9000
      - AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
      - AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
